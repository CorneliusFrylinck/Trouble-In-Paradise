// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(BetaContext))]
    partial class BetaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.14");

            modelBuilder.Entity("API.Domain.Base", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BaseX")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BaseY")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("ResourcesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ResourcesId");

                    b.ToTable("bases");
                });

            modelBuilder.Entity("API.Domain.Building", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BaseId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BaseId");

                    b.ToTable("buildings");
                });

            modelBuilder.Entity("API.Domain.ResourceItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BaseId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductionSpeed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BaseId");

                    b.ToTable("resourceItems");
                });

            modelBuilder.Entity("API.Domain.ResourceStore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cement")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Crystal_Blue")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Crystal_Red")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Food")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Gold")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Lumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Metal")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Oxygen")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Water")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("resourceStores");
                });

            modelBuilder.Entity("API.Domain.Base", b =>
                {
                    b.HasOne("API.Domain.ResourceStore", "Resources")
                        .WithMany()
                        .HasForeignKey("ResourcesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resources");
                });

            modelBuilder.Entity("API.Domain.Building", b =>
                {
                    b.HasOne("API.Domain.Base", null)
                        .WithMany("Buildings")
                        .HasForeignKey("BaseId");
                });

            modelBuilder.Entity("API.Domain.ResourceItem", b =>
                {
                    b.HasOne("API.Domain.Base", null)
                        .WithMany("ResourceBuildings")
                        .HasForeignKey("BaseId");
                });

            modelBuilder.Entity("API.Domain.Base", b =>
                {
                    b.Navigation("Buildings");

                    b.Navigation("ResourceBuildings");
                });
#pragma warning restore 612, 618
        }
    }
}
